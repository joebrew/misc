70 + 44 + 80 + 110 + 170 + 95 + 20 + 69 + 30
load("E:/fdoh/private/fluMist/vaers/adverse_events.RData")
ad <- v[which(v$STATE == "FL" & grepl("FLUMIST", v$VAX_NAME) &
v$AGE_YRS >=4 & v$AGE_YRS <= 18),]
save.image("adverse_events.RData")
names(ad)
head(ad)
ad$SYMTOM_TEXT
ad$SYMPTOM_TEXT
names(ad)
hist(ad$AGE_YRS)
summary(ad$DIED)
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("httr")
library(httr)
install.packages("httr")
install.packages("devtools", dependencies = TRUE)
library(devtools)
install.packages("devtools", dependencies = TRUE)
install.packages("roxygen2")
install.packages("devtools", dependencies = TRUE)
library(devtools)
install.packages("httr")
install.packages("Rtools")
install.packages("Rtools")
install.packages("devtools", dependencies = TRUE)
library(devtools)
library(devtools)
library(Rtools)
library(devtools)
install.packages("devtools", dependencies = TRUE)
install.packages("devtools")
library(devtools)
install.packages("httr")
install.packages("httr", dependencies = TRUE)
install.packages("devtools")
library(devtools)
update.packages("devtools")
library(devtools)
library(plyr)
install.packages("plyr")
install.packages("devtools")
packageVersion("devtools")
sessionInfo()
library(devtools)
install_github("joebrew/rpackages", subdir = "cdph")
bcol <- adjustcolor("darkgreen", alpha.f=0.4)
ycol <- adjustcolor("darkblue", alpha.f=0.4)
x <- (1:1000)^(1/2)
y <- (1:1000)^3
plot(x,y, type = "n",
xlab = "Time",
ylab = "Value",
xaxt = "n",
yaxt = "n")
b <- rev(y)
plot(x,y, type = "n",
xlab = "Time",
ylab = "Value",
xaxt = "n",
yaxt = "n")
lines(x,b, col = bcol, lwd = 5)
text(x[100], b[100],
labels = "Risk of infection",
col = bcol)
lines(x,y, col = ycol, lwd =5)
text(x[800], y[800],
labels = "Likelihood of hesitancy",
col = ycol)
x <- sample(1:1000, 1000)
y <- sample(1:1000, 1000)
mycol <- sample(c(rep("blue", 19), "red"), 1000, replace = TRUE)
mycol <- adjustcolor(mycol, alpha.f=0.6)
plot(x,y, col = mycol, pch = 16, cex =2,
xaxt = "n", xlab = NA, yaxt = "n", ylab = NA)
plot(x,y, col = mycol, pch = 16, cex =2,
xaxt = "n", xlab = NA, yaxt = "n", ylab = NA)
##################################
library(RODBC) # Read in the
install.packages("RODBC")
bm <- odbcConnect("vw_BirthMaster", uid="BrewJR", pwd="stopFlu2013")
library(RODBC) # Read in the
bm <- odbcConnect("vw_BirthMaster", uid="BrewJR", pwd="stopFlu2013")
bm <- odbcConnect("HMS01 Shadow", uid="BrewJR", pwd="Colometa08")
bm <- odbcConnect("HMS01 Shadow")
x <- c("25 (%)", "35(%)")
gsub(["(%)"], "", x)
gsub("[(%)]", "", x)
ls()
dir()
stem(1:10)
stem(seq(1,10,by=0.05))
library(gdata)
install.packages("weatherData")
library(weatherData)
# Get weather for just one day
getWeatherForDate("GNV", "2014-04-14")
# Get weather for a period of time
start <- as.Date("2014-01-01", format = "%Y-%m-%d") # define jan 1 2014 as start
x <- getSummarizedWeather("GNV", start_date = start,
end_date = Sys.Date() - 1,
opt_custom_columns = TRUE,
custom_columns = c(2,4,20))
# Glimpse at your data
head(x)
# Plot rainfall
plot(x$Date, as.numeric(x$PrecipitationIn),
cex = as.numeric(x$PrecipitationIn),
col = adjustcolor("red", alpha.f=0.4),
pch = 16)
lines(x$Date, as.numeric(x$PrecipitationIn),
col = adjustcolor("black", alpha.f = 0.4))
# Plot max temperature
plot(x$Date, x$Max_TemperatureF,
col = adjustcolor("darkred", alpha.f = 0.3),
pch = 16)
# Add min temperature
points(x$Date, x$Min_TemperatureF,
col = adjustcolor("darkblue", alpha.f = 0.3),
pch = 16,
add = T)
setwd("C:/Users/BrewJR/Documents/misc") # change this line to whereever you cloned misc
setwd("gnv_crime")
# define the link for gainesville crime
my_link1 <- "https://data.cityofgainesville.org/api/views/9ccb-cyth/rows.csv"
# read in the data
gnv <- read.csv(my_link1)
# get lat and lon
names(gnv)
# write a function to clean lat lon points
DegreesToDecimals <- function(x){
# split the string to keep only the lat, lon, part
a <- do.call(rbind, strsplit(as.character(x), "\n"))
aa <- a[,3]
# now split at the comma
b <- do.call(rbind, strsplit(as.character(aa), ","))
bb <- b#[,2]
# make df
bb <- data.frame(bb)
# fix names
names(bb) <- c("lat", "lon")
# remove parentheses
bb$lat <- as.numeric(gsub("\\(|\\)", "", bb$lat))
bb$lon <- as.numeric(gsub("\\(|\\)", "", bb$lon))
return(bb)
}
x <- DegreesToDecimals(gnv$Location.1)
# now join x to gnv
gnv <- cbind(gnv, x)
rm(x)
# plot the points on a florida map
library(maps)
map("county", "florida")
points(gnv$lon, gnv$lat, col = "red")
library(rgdal)
library(sp)
zip <- readOGR("zips_alachua", "ACDPS_zipcode")
zip <- spTransform(zip, CRS("+init=epsg:4326"))
plot(zip, col = "grey", border = "white")
points(gnv$lon, gnv$lat,
col = adjustcolor(rainbow(nrow(gnv)), alpha.f = 0.3),
pch = 1,
cex = 0.3)
